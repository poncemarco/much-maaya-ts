---
import HeaderButton from '../components/HeaderButton.astro'
---


<header class="py-8 px-4 mx-auto max-w-xl lg:py-16 lg:px-6">
  <div class="text-center mb-2 lg:mb-2">
    <div class="flex items-center">
      <h1 class="text-gray-900 mb-4 text-5xl tracking-tight font-extrabold dark:text-white">
          Muuch Maaya
      </h1>
      <slot name="theme-button"></slot>
    </div>
    <div class="py-2">   
      <label for="default-search" class="mb-2 text-sm font-medium text-gray-900 sr-only dark:text-white">Search</label>
      <div class="relative">
          <div class="absolute inset-y-0 start-0 flex items-center ps-3 pointer-events-none">
              <svg class="w-4 h-4 text-gray-500 dark:text-gray-400" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 20 20">
                  <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m19 19-4-4m0-7A7 7 0 1 1 1 8a7 7 0 0 1 14 0Z"/>
              </svg>
          </div>
          <input 
            type="search" 
            id="search" 
            class="block w-full p-4 ps-10 text-sm text-gray-900 border border-gray-300 rounded-lg bg-gray-50 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500" 
            placeholder="Busca por producto, categoria o marca" 
            required
          >
          <button type="submit" class="text-white absolute end-2.5 bottom-2.5 bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-4 py-2 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800">Search</button>
      </div>
      <p id="searchReadout" class="dark:text-white"></p>
        <section>
            <ul id="searchResults" class="dark:text-white"></ul>
        </section>
    </div>
  </div>
  <nav class="flex flex-col item-center justify-between w-full text-center md:flex-row">
    <HeaderButton href="/">
        <svg slot="before" xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-home" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M5 12l-2 0l9 -9l9 9l-2 0" /><path d="M5 12v7a2 2 0 0 0 2 2h10a2 2 0 0 0 2 -2v-7" /><path d="M9 21v-6a2 2 0 0 1 2 -2h2a2 2 0 0 1 2 2v6" /></svg>
        Inicio
    </HeaderButton>
    <HeaderButton href="/catalogo">
        <svg slot="before" xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-building-store" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M3 21l18 0" /><path d="M3 7v1a3 3 0 0 0 6 0v-1m0 1a3 3 0 0 0 6 0v-1m0 1a3 3 0 0 0 6 0v-1h-18l2 -4h14l2 4" /><path d="M5 21l0 -10.15" /><path d="M19 21l0 -10.15" /><path d="M9 21v-4a2 2 0 0 1 2 -2h2a2 2 0 0 1 2 2v4" /></svg>
        Catálogo
    </HeaderButton>
    <HeaderButton href="/ticket">
      <svg slot="before" xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-file-invoice" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M14 3v4a1 1 0 0 0 1 1h4" /><path d="M17 21h-10a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h7l5 5v11a2 2 0 0 1 -2 2z" /><path d="M9 7l1 0" /><path d="M9 13l6 0" /><path d="M13 17l2 0" /></svg>
      Ticket
    </HeaderButton>
    <HeaderButton href="/contact">
      <svg slot="before" xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-brand-whatsapp" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M3 21l1.65 -3.8a9 9 0 1 1 3.4 2.9l-5.05 .9" /><path d="M9 10a.5 .5 0 0 0 1 0v-1a.5 .5 0 0 0 -1 0v1a5 5 0 0 0 5 5h1a.5 .5 0 0 0 0 -1h-1a.5 .5 0 0 0 0 1" /></svg>
      Compra
    </HeaderButton>
  </nav>
</header>


<script>
  import DOMPurify from 'dompurify';
  import Fuse from 'fuse.js';
  document.addEventListener('astro:page-load', () => {
  //variables 
    let SEARCH_DATA: string[];
    let FUSE_INSTANCE: Fuse<string>; 
    let FUSE_OPTIONS = {
        includeScore: true,
        shouldSort: true, 
        keys: [ 
            {
                name: 'title',
                weight: 0.7,
            },
            {
                name: 'slug',
                weight: 0.5,
            },
            {
                name: 'unit',
                weight: 0.3,
            }],
        threshold: 0.5,
    };
    const SPINNER = `<svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-loader-2" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round" id="spinner">
                        <path stroke="none" d="M0 0h24v24H0z" fill="none" />
                        <path d="M12 3a9 9 0 1 0 9 9" />
                        <style>
                            #spinner {
                                animation: spin 1s linear infinite;
                            }
                            @keyframes spin {
                                0% {
                                    transform: rotate(0deg);
                                }
                                100% {
                                    transform: rotate(360deg);
                                }
                            }
                    </svg>`;

    //selectors
    const search = document.querySelector('#search') as HTMLInputElement;
    const searchReadout = document.querySelector('#searchReadout') as HTMLInputElement;
    const resultsList = document.querySelector('#searchResults') as HTMLElement; 
    //functions

    function updateSearchPageURL(search: string) {
        const url = new URL(window.location.href);
        url.searchParams.set('q', search);
        window.history.replaceState(null, "", url);
    }

    function generateSearchList(results:any[]) {
        return results.map((r) => {
            const { title, slug, unit, id } = r.item;
            return `<li>
                        <a href="/catalogo/${id}">
                            <h3>${title}</h3>
                            <p>${unit}</p>
                        </a>
                    </li> `
        })
        .join('');
    }

    async function fetchSearchResults(search : string) {
    if (search.length === 0) {
      resultsList.innerHTML = "";
      searchReadout.innerHTML = "";
      return;
    }
    resultsList.innerHTML = SPINNER;
    if (!SEARCH_DATA) {
      try {
        const res = await fetch("/search.json");
        if (!res.ok) {
          throw new Error("Something went wrong…please try again");
        }
        const data = await res.json();
        SEARCH_DATA = data;
      } catch (e) {
        console.error(e);
      }
    }
    if (SEARCH_DATA && !FUSE_INSTANCE) {
      FUSE_INSTANCE = new Fuse(SEARCH_DATA, FUSE_OPTIONS);
    }
    if (!FUSE_INSTANCE) return;
    const searchResult = FUSE_INSTANCE.search(search);
    resultsList.innerHTML =
      searchResult.length > 0
        ? generateSearchList(searchResult)
        : "No results found…";
  }

    function updateDocumentTitle(search: HTMLInputElement) {
        document.title = search ? `Resultados de búsqueda para: ${search}` : 'Search';
    } 

    function updateSearchReadout(search : URLSearchParams) {
        searchReadout.textContent = search
        ? `Resultados de búsqueda para: ${search}`
        : 'Busca productos';

    }

    //listeners

    window.addEventListener("DOMContentLoaded", () => {
        const urlParams = DOMPurify.sanitize (
            new URLSearchParams(window.location.search).get('q')
            );
        updateDocumentTitle(urlParams);
        updateSearchReadout(urlParams);
        search.value = urlParams ?? '';
    });

    search.addEventListener("input", () => {
        const searchTerm = DOMPurify.sanitize(search.value);
        updateDocumentTitle(searchTerm);
        updateSearchReadout(searchTerm);
        fetchSearchResults(searchTerm);
        updateSearchPageURL(searchTerm);
    });
  });
</script>