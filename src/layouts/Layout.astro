---
import Header from "../components/Header.astro"
import Footer from "../components/Footer.astro"
import { ViewTransitions } from "astro:transitions"
interface Props {
	title: string
}

const { title } = Astro.props

---

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content="Astro description" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<meta name="color-scheme" content="light dark">
		<title>{title}</title>
		<ViewTransitions />
	</head>
	<body class="bg-white dark:bg-gray-900 min-h-screen pb-32">
		<Header transition:persist>
			<div slot="theme-button">
				<button
					id="theme-toggle"
					class="p-2 rounded-full bg-gray-200 dark:bg-gray-800"
				>
				</button>
			</div>
		</Header>
			<main class="max-w-5xl px-4 m-auto">
				<slot />
			</main>
		<Footer />
	</body>
</html>
<style is:global>
	:root {
		--accent: 136, 58, 234;
		--accent-light: 224, 204, 250;
		--accent-dark: 49, 10, 101;
		--accent-gradient: linear-gradient(
			45deg,
			rgb(var(--accent)),
			rgb(var(--accent-light)) 30%,
			white 60%
		);
	}
	html {
		font-family: system-ui, sans-serif;
		background: #13151a;
		background-size: 224px;
		color-scheme: dark light;
	}
	code {
		font-family:
			Menlo,
			Monaco,
			Lucida Console,
			Liberation Mono,
			DejaVu Sans Mono,
			Bitstream Vera Sans Mono,
			Courier New,
			monospace;
	}
</style>

<script>
	document.addEventListener('astro:page-load', () => {
		//variables
		let theme : string | void;

		//components
		const themeToggle = document.querySelector("#theme-toggle") as HTMLButtonElement;

		// functions 
		function getCurrenTheme() {
			let currentTheme = localStorage.getItem("theme") || "light";
			if (currentTheme === "dark") {
				document.documentElement.classList.add("dark");
			}
			return currentTheme;
		}

		function changeTheme() {
			if (theme === "light") {
				document.documentElement.classList.add("dark");
				theme = "dark";
			} else {
				document.documentElement.classList.remove("dark");
				theme = "light";
			}
			themeToggle.innerHTML = theme === "light" ? "üåô" : "‚òÄÔ∏è";
			window.localStorage.setItem("theme", theme);
		} 

		// set initial theme
		theme = getCurrenTheme();
		themeToggle.innerHTML = theme === "light" ? "üåô" : "üåû";

		


		//listeners 
		themeToggle.addEventListener("click", changeTheme);

	});

	
</script>